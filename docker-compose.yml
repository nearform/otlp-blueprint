version: '3.9'
services:
  postgresql:
    container_name: oltp_db
    image: postgres:14.2-alpine
    environment:
      - POSTGRES_USER=otlpuser
      - POSTGRES_PASSWORD=otlppassword
      - POSTGRES_DB=tododb
    networks:
      - otlp-network
    healthcheck:
      test: ["CMD-SHELL","pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./postgresql/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: Backend.dockerfile
      target: source
    # env_file:
    #   - ./pkg-svcs/backend/.env
    environment:
      - APP_VERSION=1.0.0
    ports:
      - "3000:3000"
    networks:
      - otlp-network
    depends_on:
      - postgresql
      - jaeger
    volumes:
      - ./pkg-svcs/backend:/app/backend
    command: "npm run start:container"
  
  frontend:
    container_name: frontend
    build:
      context: ./
      dockerfile: Frontend.dockerfile
      target: source
    # env_file:
    #   - ./pkg-svcs/frontend/.env
    ports:
      - "8080:8080"
    networks:
      - otlp-network
    depends_on:
      - backend
      - postgresql
      - jaeger
    volumes:
      - ./pkg-svcs/frontend:/app/frontend
    command: "npm run start:container"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - otlp-network
  
  collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/conf/collector-config.yaml", "--log-level=DEBUG"]
    volumes:
      - ./collector-config.yaml:/conf/collector-config.yaml
    ports:
      - "9464:9464"
      - "55680:55680" # for traces
      - "55681:55681" # for metrices
    depends_on:
      - jaeger
    networks:
      - otlp-network
  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - otlp-network
volumes:
  postgresql:
    external: false
networks:
      otlp-network:
